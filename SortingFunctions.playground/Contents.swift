import UIKit

let numbers = [5, 3, 8, 1, 2]

// Функция sorted() используется для сортировки элементов коллекции, такой как массив, и возвращает новый массив с отсортированными элементами. В отличие от метода sort(), который изменяет оригинальный массив на месте, sorted() создает новый массив

// let sortedArray = array.sorted() или array.sorted(by: )

// by: параметр, который позволяет указать замыкание для определения порядка сортировки. Если параметр не указан, элементы сортируются в порядке возрастания по умолчанию.

// Сортировка чисел в порядке возрастания

let sortedNumbers = numbers.sorted()
print(sortedNumbers)

// Сортировка в порядке убывания

let descendingNumbers = numbers.sorted(by: >)
print(descendingNumbers)

// Использование замыкания для кастомной сортировки

// В этом примере массив кортежей сортируется по возрасту (второй элемент кортежа).

let people = [("John", 25), ("Jane", 30), ("Dave", 20)]
let sortedByAge = people.sorted { $0.1 < $1.1 }
print(sortedByAge)

//Функция sort в Swift используется для сортировки элементов массива непосредственно на месте. В отличие от метода sorted(), который возвращает новый отсортированный массив, sort() изменяет оригинальный массив.

// Кастомная сортировка объектов

struct Person {
    let name: String
    let age: Int
}

var people2 = [
    Person(name: "John", age: 30),
    Person(name: "Jane", age: 25),
    Person(name: "Doe", age: 35)
]

people2.sort { $0.age < $1.age }
for person in people2 {
    print("\(person.name): \(person.age)")
}


// Функции min(by:) и max(by:) в Swift используются для нахождения минимального и максимального элемента в последовательности (например, массиве) на основе заданного условия. Эти функции позволяют определить, какой элемент является минимальным или максимальным по определённому критерию, используя замыкания.

// возвращают минимальный/максимальный элемент последовательности, основываясь на условии, заданном в замыкании. Если последовательность пуста, возвращается nil.

if let minimumValue = numbers.min(by: { $0 < $1 }) {
    print("Минимальное значение: \(minimumValue)")
}

